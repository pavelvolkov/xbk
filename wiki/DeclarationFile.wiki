=Декларационный файл module.xml=

Понятие "модуль" в данной системе отличается от стереотипного аналога в обычных CMS. Это полноценный программный модуль, понимаемый значительно шире. Схема интеграции модуля в системе описывается в специальном декларационном файле module.xml.
Рассмотрим структуру файла на следующем примере:

{{{
<?xml version="1.0" encoding="utf-8" ?>
<declaration xbkVersion="3.0">
    <meta>
        <project>my_module</project>
        <version>2.1</version>
        <xbkVersion>1.0</xbkVersion>
        <migration>7</migration>
        <class>MyModule_Meta</class>
    </meta>
    <uses>
        <dependencies modules="my_base_module1,my_base_module2" />
        <autoload class="xbkMyModule_Loader" method="autoload" />
    </uses>
    <sections>
        <section type="node" name="main" enforceNonSSL="true" class="MyModule_MainSection">
            <section type="node" name="sub1" class="MyModule_Sub1Section" />
            <section type="node" name="sub2" class="MyModule_Sub2Section" />
        </section>
        <section type="page" name="query" enforceSSL="true" class="MyModule_QuerySection" />
        <section type="image" name="image" class="MyModule_ImageSection" />
    </sections>
    <blocks>
        <block name="myBlock" class="MyModule_MyBlock" editClass="MyModule_MyBlockEdit" />
    </blocks>
    <templateModules>
        <templateModule type="function" name="MyFunction" class="MyModule_MyTemplateFunction" />
        <templateModule type="modifier" name="MyModifier" class="MyModule_MyTemplateModifier" />
    </templateModules>
    <extensions>
        <extension name="myExtension" class="OtherModule_MyExtension" extensionPoint="myExtensionPoint" extensionPointModule="other_module" />
    </extensions>
    <extensionPoints>
        <extensionPoint name="simpleExtensionPoint" class="MyModule_SimpleExtensionPoint" />
    </extensionPoints>
</declaration>
}}}

Атрибут "xbkVersion" корневого тега "declaration" означает версию системы, в контексте которой понимается формат и производится весь дальнейший разбор файла. Группа тегов "meta" описывает установочную информацию:
  * *project* - имя текущего модуля, должно совпадать с именем папки;
  * *version* - версия модуля;
  * *xbkVersion* - версия системы с момента последнего тестирования модуля.
  * *migration* - номер требуемой миграции;
  * *class* - класс мета-информации модуля;
Вся нижеследующая информация предоставляется опционально. Блок тегов "uses" содержит указание на модули, от которых зависит текущий модуль, а также дополнительный метод, добавляемый в стек автозагрузки в случае необходимости. Модуль "core", от которого зависят все абсолютно модули, в теге "dependencies" можно не указывать. Таким образом, если модуль не зависит больше ни от каких модулей, кроме главного, использует стандартные правила автозагрузки классов, то блок тегов "uses" можно не использовать.
Ниже идёт описание секций. Секция - это раздел сайта, которому соответствует определённый класс. Секция может быть одного из следующих типов:
  * *node* - состоит из содержания, заголовка, описания и ключевых слов. Заключается в отдельный общий макет, доступ к которому не имеет. Макетом для секции данной разновидности служит шаблон системного модуля "page".
  * *page* - представляет собой самостоятельную веб-страницу произвольного шаблона.
  * *document* - любой другой текстовый документ, типа, "text/xml", "text/css" и др...
  * *image* - бинарный файл графического изображения поддерживаемого формата (jpeg, gif, png, bmp).
  * *file* - файл, выводимый на скачивание.
  * *blank* - произвольный тип.
Кроме первого типа, остальные отличаются друг от друга предопределённым набором http-заголовков и некоторыми упрощёнными правилами их модификации. Последний тип "blank" является чистым, никаких http-заголовков изначально не содержит.
Секции строятся по иерархическому принципу и поддерживают механизм наследования атрибутов. Таким образом, первая дочерняя секция будет вызываться по адресу: http://my.domain.com/main/sub1/ . Свойство "enforceNonSSL" (принудительный вызов обычного протокола http) будет применяться для всех нижестоящих секций - то есть, если обратиться по адресу https://my.domain.com/main/sub1/ будет автоматически произведён редирект на http-протокол.
Атрибут "class" применяется здесь и ниже и указывает на имя класса, исполняющего роль секции в данном случае. Соответственно, класс секции должен быть получен путём наследования базового класса "xbkSection". Для других компонентов базовый класс и соглашение работы будут другими, но принцип указания имени класса в качестве тегового атрибута далее везде аналогичный.
Стоит отдельно упомянуть о булевых атрибутах: здесь значение "истина" обозначаются как "true", "yes", "on". "Ложь" - соответственно, как "false", "no", "off". 