=Генератор веб-форм=

Модуль генерации веб-форм предоставляет объектный интерфейс для построения и обработки формы любой конструкции. Данный модуль функционирует даже в неустановленном состоянии. В наличии имеется полный набор типов полей с возможностью их группировки и формирования иерархии:
 * текстовое поле
 * многострочное текстовое поле
 * поле ввода пароля
 * поле загрузки файла
 * скрытое поле
 * выпадающий список
 * чекбокс
 * группа радиокнопок
 * группа чекбоксов
 * html-поле
 * кнопка отправки формы
 * группа кнопок отправки формы

Чтобы построить свёрстанную web-форму, для начала необходимо инстанцировать объект класса "xbkForm", сообщив ему ряд параметров через конструктор:
{{{
$values = Array();
$options = Array(
    'title' => 'My form',
    'action' => $this->uri()->build(),
    'method' => 'post', 
    'width' => '400px',
    'validate' => Array($this, 'validateForm'),
    'handle' => Array($this, 'handleForm'),
);
$this->loadClass('xbkForm', 'form', true);
$Form = $this->factory('xbkForm', 'my_form', $options, $values);
}}}
Первый параметр "my_form" является идентификатором формы, используется в CSS и для идентификации через точку расширения "form" данного модуля. Второй параметр сообщает ряд опций в форме массива:
 * *extendable* - флаг, указывающий, что форма подлежит возможности дополнения через точку расширения "form" (по-умолчанию равен true);
 * *template* - шаблон формы, перекрывающий шаблон по-умолчанию - объект класса "xbkPhptemplate";
 * *title* - заголовок формы;
 * *action* - адрес отправки формы;
 * *method* - метод отправки (get, post, put), по-умолчанию равен "post";
 * *width* - ширина в пикселах или в процентах;
 * *enctype* - тип кодировки, по-умолчанию - "text/plain" (но если мы используем поле загрузки файла, параметр "enctype" заменяется автоматически на "multipart/form-data");
 * *validate* - callback-метод валидации;
 * *handle* - callback-метод обработки;