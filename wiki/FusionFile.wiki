=Декларационный файл module.xml=

Понятие "модуль" в данной системе отличается от стереотипного аналога в обычных CMS. Это полноценный программный модуль, понимаемый значительно шире. Схема интеграции модуля в системе описывается в специальном декларационном файле module.xml.
Рассмотрим структуру файла на следующем примере:

{{{
<?xml version="1.0" encoding="utf-8" ?>
<declaration xbkVersion="1.0">
    <abstract>
        <name>my_module</name>
        <group>my_group</group>
        <version>2.1</version>
        <xbkVersion>1.0</xbkVersion>
    </abstract>
    <uses>
        <dependencies modules="my_base_module1,my_base_module2" />
        <autoload class="xbkMyModule_Loader" method="autoload" />
    </uses>
    <sections>
        <section type="content" name="main" enforceNonSSL="true" class="xbkMyModule_MainSection">
            <section type="content" name="sub1" class="xbkMyModule_Sub1Section" />
            <section type="content" name="sub2" class="xbkMyModule_Sub2Section" />
        </section>
        <section type="page" name="query" enforceSSL="true" class="xbkMyModule_QuerySection" />
        <section type="image" name="image" class="xbkMyModule_ImageSection" />
    </sections>
    <templateModules>
        <templateModule type="function" name="MyFunction" class="xbkMyModule_MyTemplateFunction" />
        <templateModule type="modifier" name="MyModifier" class="xbkMyModule_MyTemplateModifier" />
    </templateModules>
    <events>
        <event name="myEvent" class="xbkMyModule_MyEvent" />
    </events>
    <eventHandlers>
        <eventHandler name="nodeDeleteHandler" class="xbkMyModule_NodeDeleteHandler" event="nodeDelete" eventModule="my_base_module1" />
    </eventHandlers>
</declaration>
}}}

Атрибут "xbkVersion" корневого тега "declaration" означает версию системы, в контексте которой понимается формат и производится весь дальнейший разбор файла. Группа тегов "abstract" описывает установочную информацию:
  * name - имя текущего модуля, должно совпадать с именем папки;
  * group - группа модулей, к которой принадлежит данный модуль;
  * version - версия модуля;
  * xbkVersion - версия системы с момента последнего тестирования модуля.
Вся нижеследующая информация предоставляется опционально. Блок тегов "uses" содержит указание на модули, от которых зависит текущий модуль, перечисленные через запятую, а также дополнительный метод, добавляемый в стек автозагрузки в случае необходимости. Модуль "core", от которого зависят все абсолютно модули, в теге "dependencies" можно не указывать. Таким образом, если модуль не зависит больше ни от каких модулей, кроме главного, и использует стандартные правила автозагрузки классов, то блок тегов "uses" можно вообще не использовать.
Ниже идёт описание секций. Секция - это раздел сайта, которому соответствует определённый класс. Секция может быть одного из следующих типов:
  * *content* - состоит из содержания, заголовка, описания и ключевых слов. Заключается в отдельный общий макет, доступ к которому не имеет. Макетом для секции данной разновидности служит шаблон системного модуля "page".
  * *page* - представляет собой самостоятельную веб-страницу произвольного шаблона.
  * *document* - любой другой текстовый документ, типа, "text/xml", "text/css" и др...
  * *image* - бинарный файл графического изображения поддерживаемого формата (jpeg, gif, png, bmp).
  * *file* - файл, выводимый на скачивание.
  * *clean* - произвольный тип.
Все форматы секции, кроме первого, отличаются друг от друга в конечном итоге предопределённым набором http-заголовков и некоторыми упрощёнными правилами их модификации. Последний тип "clean" является чистым, никаких http-заголовков изначально не содержит.
Секции строятся по иерархическому принципу и поддерживают механизм наследования атрибутов. Так, первая дочерняя секция будет вызываться по адресу: http://my.domain.com/main/sub1/ . Свойство "enforceNonSSL" (принудительный вызов обычного протокола http) будет применяться для всех нижестоящих секций - то есть, если обратиться по адресу https://my.domain.com/main/sub1/ будет автоматически произведён редирект на http-протокол.
Атрибут "class" применяется здесь и ниже и указывает на имя класса, исполняющего роль секции в данном случае. Соответственно, класс секции должен быть получен путём наследования базового класса "xbkSection". Для других компонентов базовый класс и соглашение работы будут другими, но принцип указания имени класса в качестве тегового атрибута далее везде аналогичный.