=Модульная архитектура=

Система веб-проктирования "xBk" является модульной.

*Модуль* - набор программных компонент, объединёных для выполнения схожих задач, имеющие общие конфигурационные, языковые настройки, общий набор скинов и общую структуру данных, функционирующие на базе API-интерфейса ядра системы. Понятие "модуль" здесь можно понимать как "подсистема" или "стереотип" (UML).
 * Модуль поставляется единым комплектом. 
 * Модули системы условно разделены на две группы - системные (папка - "system_modules/") и пользовательские (папка - "user_modules/") - соглашения работы полностью идентичны у тех и других.
 Разделение модулей на две группы удобно с точки зрения централизованного обновления
 системы до новых версий. Особую координационную роль играет модуль "Ядро" (core), являясь
 первичным в последовательности запуска. 
 * Модуль может содержать модели данных во внутренней папке "models/" и историю миграций в "migrations/", если предполагается использование собственной структуры базы данных. Работа с моделями и миграциями производится по правилам библиотеки "ORM Doctrine". 
 * Основными программными компонентами модуля являются классы "php", _имена которых должны быть уникальными_. 
 * Ключевую роль в работе модуля играет особая группа класcов - контекстные объекты.
 * Параметры интеграции модуля в системе устанавливаются в декларационном файле "module.xml", который располагается в папке модуля. Дополнительные процедуры характерные в работе модуля объявляются в специальном мета-классе.
 * Существует несколько уровней взаимодействия модулей друг с другом. Тесное взаимодействие - когда один модуль непосредственно обращается к хранимым данным другого модуля. Нормальное - обращение к классам другого модуля. Обратное (ожидающее) взаимодействие - объявление точек расширения и подключение к ним (отличается от системы хуков тем, что здесь взаимодействуют два объекта - вызыващий и вызываемый - через API-интерфейс точки расширения).
 * Языковые настройки модуля хранятся в папке "lang/" в xml-файлах, чьи имена устанавливаются по индексу языка.

Список модулей представлен в панели суперадмина в разделе "Модули". Каждый модуль может предоставлять следующую информацию:
 * *Проектное имя* - идентификационное имя модуля, берётся из декларационного файла;
 * *Название* - берётся из мета-класса;
 * *Описание* - берётся из мета-класса;
 * *Автор* - берётся из мета-класса;
 * *Лицензия* - берётся из мета-класса;
 * *Версия модуля* - берётся из декларационного файла;
 * *Версия системы* - берётся из декларационного файла;
 * *Структура БД* - определяется на основании моделей данных данного модуля, может быть "установлена", "не установлена", "не требуется", "частичное несоответствие" (в последнем случае требуется обновление модуля, либо его переустановка);
 * *Миграция* - текущая миграция - "устарвшая", "текущая", "опережающая", "не определена / не задана";
 * *Регистрация* - состояние регистрации;
 * *Зависит от* - модули, от которых зависит данный модуль - они должны быть установлены;
 * *Разделы* - быстрое меню модуля - берётся из мета-класса;
 * *Действия* - действия над модулем.

Установка модуля производится действием "Установить". В процессе установки в базе данных создаются необходимые таблицы (если они были описаны моделями данных), производится регистрация модуля, во время которой информации из файла "module.xml", языковые настройки помещаются в базу данных и запускается процедура инсталляции "install()", если она была объявлена в мета-классе. В дальнейшей работе модуля вся необходимая информация берётся из базы данных.
В процессе проектирования модуля, все изменения, вносимые в декларационный файл, и языковые настройки необходимо синхронизировать с базой данных. Обновление регистрационной информации производится действием "Перерегистрировать". Также можно обновить только языковые настройки модуля, нажав "Обновить языковой интерфейс".

Деинсталляция осуществляется действием "Деинсталлировать", в результате чего таблицы, относящиеся к данному модулю, удаляются из базы данных, удаляется регистрация и запускается процедура деинсталляции "uninstall()", если она была объявлена в мета-классе.

Процедура обновления версии модуля поизводится действием "Миграции >>", где сперва будет предложен список доступных миграций. Требуемый номер миграции подсвечен. Также можно нажать на "Обновить до требуемой версии". Процесс обновления заключается в операциях с базой данных, котрые описаны в запрошенном миграционном файле в соответствии с номером миграции.