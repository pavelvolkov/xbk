=Конфигурации модуля=

Конфигурация компьютерной программы не является структурированной информацией, которую было бы удобно хранить в базе данных в форме таблиц. Наиболее подходящее представление конфигураций - это ассоциативный массив и его вариации в тектовых форматах XML, YAML, ini-файлы и т. д. Система позволяет сохранять в базе данных настройки модуля в форме массива и получать его обратно в исходном виде, что даёт возможность в перспективе менять конфигурации модуля из пользовательского интерфейса.
Для реализации этой задачи предоставлен ряд методов, но в первую очередь нам необходимо объявить скелет конфигурационного массива и значения по-умолчанию - это следует сделать в мета-классе модуля:
{{{
class MyModule_Meta extends xbkModuleMeta
{

    public function getTitle ()
    {
    	return 'My Module';
    }

    public function getConfigDefault ()
    {
    	$config = Array();

    	$config['email'] = 'admin@domain.com';
    	$config['options'] = Array();
    	$config['options']['option1'] = true;
    	$config['options']['option2'] = false;

    	return $config;
    }
}}}
Метод "getConfigDefault()" возвращает массив конфигураций по-умолчанию, который в последствии будет перекрываться массивом из базы данных.

Следующие методы базового класса "xbkContextObject" обеспечивают необходимый функционал, для работы с конфигурационным массивом.
Метод "getConfig()" получает текущие конфигурации:
{{{
$config = $this->getConfig();
}}}
Метод "loadConfig()" при каждом вызове загружает конфигурационый массив из базы, в то время как метод "getConfig()" делает это только при первом вызове, а после чего возвращает данные из кеша:
{{{
$config = $this->loadConfig();
}}}
Метод "getConfigDefault()" получает конфигурации по-умолчанию:
{{{
$config_default = $this->getConfigDefault();
}}}
Сохраняет конфигурации:
{{{
$this->saveConfig(config);
}}}
Сбрасывает конфиг в умолчания:
{{{
$this->resetConfig();
}}}